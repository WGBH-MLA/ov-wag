[project]
name = 'ov-wag'
version = "1.2.0"
description = 'WGBH Open Vault Wagtail backend'
authors = [{ name = 'WGBH-MLA', email = 'ryan_harbert@wgbh.org' }]
# readme = 'README.md'
license = { text = 'MIT' }
requires-python = '>=3.10, <4'
dependencies = [
    "Django~=5.2.1",
    "wagtail~=7.0.1",
    "wagtail-factories~=4.2.1",
    "pydantic~=2.11.5",
    "psycopg2-binary>=2.9.10",
    "python-dotenv~=1.1.0",
    "wagtail-headless-preview~=0.8.0",
    "django-cors-headers~=4.7.0",
    "django-allauth>=65.9,<65.11",
    "elasticsearch~=8.18.1",
    "wagtail-footnotes~=0.13.0",
]

[dependency-groups]
dev = ["black~=25.1.0", "ruff~=0.11.12", "pre-commit~=4.2.0"]
docs = [
    "mkdocs~=1.6.1",
    "mkdocs-material~=9.6.14",
    "mike~=2.1.3",
    "mkdocstrings[python]>=0.29.1,<0.31.0",
    "mkdocs-git-revision-date-localized-plugin~=1.4.7",
    "mkdocs-jupyter~=0.25.1",
]

[project.optional-dependencies]
cli = ["typer~=0.16.0", "loguru~=0.7.3", "trogon~=0.6.0"]
production = ["gunicorn~=23.0.0", "django-storages[s3]~=1.14.6"]
test = [
    "pytest~=8.4.0",
    "pytest-django~=4.11.1",
    "pytest-cov>=6.1.1,<6.3.0",
    "pytest-sugar~=1.0.0",
    "pytest-xdist~=3.7.0",
    "nbmake~=1.5.5",
    "coverage>=7.8.2,<7.11.0",
]


[project.urls]
documentation = 'https://wgbh-mla.github.io/ov-wag/'
homepage = 'https://github.com/WGBH-MLA/ov-wag'
repository = 'https://github.com/WGBH-MLA/ov-wag'

[project.scripts]
ov = 'cli:app'
ov-docs = 'mkdocs.commands:serve.serve'

[build-system]
requires = ["uv_build>=0.8.9,<0.9.0"]
build-backend = "uv_build"

[tool.black]
extend-exclude = 'migrations'

[tool.ruff]
extend-exclude = ['migrations', 'docs/**/*.ipynb']

[tool.ruff.lint]
select = [
    'B',   # flake8-bugbear
    'C4',  # flake8-comprehensions
    'C90', # mccabe
    'E',   # pycodestyle errors
    'ERA', # eradicate
    'F',   # pyflakes
    # 'I', # isort
    'INT', # flake8-gettext
    'N',   # pep8-naming
    'PIE', # flake8-pie,
    'PLC', # pylint - convention
    'PLE', # pylint - error
    'PLW', # pylint - warning
    'Q',   # flake8-quotes
    'RET', # flake8-return,
    'RUF', # Ruff-specific rules
    'SIM', # flake8-simplify
    'UP',  # pyupgrade
    'W',   # pycodestyle warnings

]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = 'ov_wag.settings.test'
python_files = ['tests.py', 'test_*.py', '*_tests.py']
testpaths = ['authors', 'exhibits', 'ov_collections', 'ov_wag']

[tool.uv.build-backend]
module-root = ""
