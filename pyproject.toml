[project]
name = 'ov-wag'
dynamic = ['version']
description = 'WGBH Open Vault Wagtail backend'
authors = [{ name = 'WGBH-MLA', email = 'ryan_harbert@wgbh.org' }]
readme = 'README.md'
license = { text = 'MIT' }
dependencies = [
    "Django~=5.1",
    "wagtail~=6.2",
    "wagtail-factories~=4.2",
    "pydantic~=2.8",
    "psycopg2~=2.9",
    "python-dotenv~=1.0",
    "gunicorn~=23.0",
    "wagtail-headless-preview~=0.8",
    "django-cors-headers~=4.4",
    "django-allauth~=64.1",
    "elasticsearch~=8.15",
    "wagtail-footnotes~=0.12",
]
requires-python = '>=3.10,<4.0'

[project.urls]
documentation = 'https://wgbh-mla.github.io/ov-wag/'
homepage = 'https://github.com/WGBH-MLA/ov-wag'
repository = 'https://github.com/WGBH-MLA/ov-wag'

[project.scripts]
ov = 'cli:app'

[project.optional-dependencies]
cli = ["typer~=0.12", "loguru~=0.7", "trogon~=0.5"]
production = [
    "gunicorn[standard]~=23.0",
    "django-storages[s3]~=1.14",
    "boto3==1.34.161",
]

[build-system]
requires = ['pdm-backend']
build-backend = 'pdm.backend'

[tool.black]
extend-exclude = 'migrations'

[tool.ruff]
extend-exclude = ['migrations']

[tool.pdm]
version = { source = 'file', path = 'ov_wag/_version.py' }

[tool.pdm.dev-dependencies]
dev = ["black~=24.8", "ruff~=0.6", "pre-commit~=3.8"]
docs = [
    "mkdocs~=1.6",
    "mkdocs-material~=9.5",
    "mike~=2.1",
    "mkdocstrings[python]~=0.25",
    "mkdocs-git-revision-date-localized-plugin~=1.2",
    "mkdocs-jupyter~=0.24",
]
test = [
    "pytest~=8.3",
    "pytest-django~=4.8",
    "pytest-cov~=5.0",
    "pytest-sugar~=1.0",
    "pytest-xdist~=3.6",
    "nbmake~=1.5",
    "coverage~=7.6",
]

[lint]
select = [
    'B', # flake8-bugbear
    'C4', # flake8-comprehensions
    'C90', # mccabe
    'E', # pycodestyle errors
    'ERA', # eradicate
    'F', # pyflakes
    # 'I', # isort
    'INT', # flake8-gettext
    'N', # pep8-naming
    'PIE', # flake8-pie,
    'PLC', # pylint - convention
    'PLE', # pylint - error
    'PLW', # pylint - warning
    'Q', # flake8-quotes
    'RET', # flake8-return,
    'RUF', # Ruff-specific rules
    'SIM', # flake8-simplify
    'UP', # pyupgrade
    'W', # pycodestyle warnings

]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = 'ov_wag.settings.test'
python_files = ['tests.py', 'test_*.py', '*_tests.py']
testpaths = ['authors', 'exhibits', 'ov_collections', 'ov_wag']
