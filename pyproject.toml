
[project]
name = 'ov-wag'
dynamic = ['version']
description = 'WGBH Open Vault Wagtail backend'
authors = [{ name = 'WGBH-MLA', email = 'ryan_harbert@wgbh.org' }]
readme = 'README.md'
license = { text = 'MIT' }
dependencies = [
    "Django>=4.2.7",
    "wagtail>=5.2.1",
    "wagtail-factories>=4.1.0",
    "pydantic>=2.5.1",
    "psycopg2>=2.9.9",
    "python-dotenv>=1.0.0",
    "gunicorn>=21.2.0",
]
requires-python = '>=3.9,<4.0'

[project.urls]
documentation = 'https://wgbh-mla.github.io/ov-wag/'
homepage = 'https://github.com/WGBH-MLA/ov-wag'
repository = 'https://github.com/WGBH-MLA/ov-wag'


[project.scripts]
ov = 'cli:app'

[project.optional-dependencies]
cli = [
    "typer>=0.9.0",
    "loguru>=0.7.2",
    "trogon>=0.5.0",
]
production = [
    'gunicorn[standard]~=21.2',
    'django-storages[s3]~=1.14'
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = { source = 'file', path = 'ov_wag/_version.py' }

[tool.black]
extend-exclude = 'migrations'

[tool.ruff]
extend-exclude = ['migrations']
ignore = ['Q000']
select = [
    'B', # flake8-bugbear
    'C4', # flake8-comprehensions
    'C90', # mccabe
    'E', # pycodestyle errors
    'ERA', # eradicate
    'F', # pyflakes
    # 'I', # isort
    'INT', # flake8-gettext
    'N', # pep8-naming
    'PIE', # flake8-pie,
    'PLC', # pylint - convention
    'PLE', # pylint - error
    'PLW', # pylint - warning
    'Q', # flake8-quotes
    'RET', # flake8-return,
    'RUF', # Ruff-specific rules
    'SIM', # flake8-simplify
    'UP', # pyupgrade
    'W', # pycodestyle warnings

]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.1.5",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.7",
    "mike>=2.0.0",
    "mkdocstrings[python]>=0.23.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.1",
    "mkdocs-jupyter>=0.24.6"
]
test = [
    "pytest>=7.4.3",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "pytest-sugar>=0.9.7",
    "pytest-xdist>=3.4.0",
    "nbmake>=1.4.6",
    "coverage>=7.3.2",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = 'ov_wag.settings.test'
python_files = ['tests.py', 'test_*.py', '*_tests.py']
testpaths =[
  'authors',
  'exhibits',
  'ov_collections',
  'ov_wag'
]
