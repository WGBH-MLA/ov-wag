# generated by datamodel-codegen:
#   filename:  mmif.schema.json
#   timestamp: 2025-07-16T18:20:19+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Dict, List, Optional, Union

from pydantic import AnyUrl, BaseModel, Extra, Field, constr, RootModel


class StrStrMap(RootModel):
    root: Dict[constr(regex=r'.+'), Union[str, List[str]]]


class MmifMetadata(BaseModel):
    mmif: AnyUrl


class Error(BaseModel):
    message: constr(min_length=1)
    stackTrace: Optional[str] = None


class ViewMetadata1(BaseModel):
    timestamp: Optional[datetime] = None
    app: AnyUrl
    contains: Dict[constr(regex=r'^https?://'), Dict[str, Any]]
    error: Optional[Error] = None
    warnings: Optional[List[str]] = Field(None, min_length=1)
    parameters: Optional[StrStrMap] = None
    appConfiguration: Optional[Dict[str, Any]] = None


class ViewMetadata2(BaseModel):
    timestamp: Optional[datetime] = None
    app: AnyUrl
    contains: Optional[Dict[constr(regex=r'^https?://'), Dict[str, Any]]] = None
    error: Optional[Error] = None
    warnings: List[str] = Field(..., min_length=1)
    parameters: Optional[StrStrMap] = None
    appConfiguration: Optional[Dict[str, Any]] = None


class ViewMetadata3(BaseModel):
    timestamp: Optional[datetime] = None
    app: AnyUrl
    contains: Optional[Dict[constr(regex=r'^https?://'), Dict[str, Any]]] = None
    error: Error
    warnings: Optional[List[str]] = Field(None, min_length=1)
    parameters: Optional[StrStrMap] = None
    appConfiguration: Optional[Dict[str, Any]] = None


class ViewMetadata(BaseModel):
    __root__: Union[ViewMetadata1, ViewMetadata2, ViewMetadata3]


class Text(BaseModel):
    class Config:
        extra = Extra.forbid

    field_value: str = Field(..., alias='@value')
    field_language: Optional[str] = Field(None, alias='@language')


class AnnotationProperties(BaseModel):
    id: constr(min_length=1)


class Annotation(BaseModel):
    class Config:
        extra = Extra.forbid

    field_type: constr(min_length=1) = Field(..., alias='@type')
    properties: AnnotationProperties


class View(BaseModel):
    class Config:
        extra = Extra.forbid

    id: constr(min_length=1)
    metadata: ViewMetadata
    annotations: List[Annotation]


class MultiMediaInterchangeFormat(BaseModel):
    class Config:
        extra = Extra.forbid

    metadata: MmifMetadata
    documents: List[Annotation] = Field(..., min_length=1)
    views: List[View]
